
#pragma once

#include "../common/server.h"
#include "../common/rtp.h"
#include "../common/thread.h"
#include "../common/circlebuf.h"

#define DEFAULT_INI_FILE   "udpserver.ini"
#define DEFAULT_PID_FILE   "udpserver.pid"
#define DEFAULT_LOG_FILE   "udpserver.log"

#define DEF_CENTER_ADDR         "edu.ihaoyi.cn"    // 默认中心服务器域名...
#define DEF_CENTER_PORT                  26026     // 默认中心服务器端口...
#define DEF_TCP_PORT                     21002     // 默认TCP服务器端口
#define DEF_UDP_PORT                     15252     // 默认UDP服务器端口
#define DEF_MTU_SIZE                       800     // 默认MTU分片大小(字节)...
#define MAX_BUFF_LEN                      1024     // 最大报文长度(字节)...
#define MAX_OPEN_FILE                     2048     // 最大打开文件句柄数(个)...
#define MAX_EPOLL_SIZE                    1024     // EPOLL队列最大值...
#define MAX_LISTEN_SIZE                   1024     // 监听队列最大值...
#define CHECK_TIME_OUT                      10     // 超时检测周期 => 每隔10秒，检测一次超时...
#define PLAY_TIME_OUT                       15     // 网络超时周期 => 15秒没有数据，认为超时...
#define MAX_SLEEP_MS                        15     // 最大休息时间(毫秒)...
#define APP_SLEEP_MS                       100     // 应用层休息时间(毫秒)...

using namespace std;

class CApp;

typedef map<uint32_t, rtp_lose_t> GM_MapLose;     // 定义检测到的丢包队列 => 序列号 : 丢包结构体...

// 获取全局的App对象...
CApp * GetApp();

//////////////////////////////////////////////////////////////////////////
// 以下是有关TCP中转服务器的相关变量和类型定义...
//////////////////////////////////////////////////////////////////////////
class CRoom;
class CTCPClient;
class CUDPClient;
typedef list<CUDPClient *>      GM_ListPusher;    // 有补包的推流者列表 => 学生推流者|老师推流者...
typedef list<CUDPClient *>      GM_ListLooker;    // 有丢包的观看者列表 => 学生观看者|老师观看者...
typedef map<int, CRoom*>        GM_MapRoom;       // RoomID     => CRoom*
typedef map<string, string>     GM_MapJson;       // key        => value => JSON map object...
typedef map<int, CTCPClient*>   GM_MapTCPConn;    // connfd     => CTCPClient* => Student | Teacher
typedef map<int, CUDPClient*>   GM_MapUDPConn;    // PortID     => CUDPClient* => Student | Teacher
